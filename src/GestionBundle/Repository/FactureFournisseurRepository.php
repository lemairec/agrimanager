<?php

namespace GestionBundle\Repository;

use GestionBundle\Entity\Ecriture;
use GestionBundle\Entity\Operation;
/**
 * FactureFournisseurRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FactureFournisseurRepository extends \Doctrine\ORM\EntityRepository
{
    function save($facture){
        $em = $this->getEntityManager();

        $em->getRepository('GestionBundle:Operation')->deleteForFacture($facture);

        $em->persist($facture);
        $em->flush();

        $operation = new Operation();
        $operation->name = $facture->name;
        $operation->date = $facture->date;
        $operation->facture = $facture;

        $em->persist($operation);
        $em->flush();

        $ecriture = new Ecriture();
        $ecriture->compte = $facture->banque;
        $ecriture->operation = $operation;
        $ecriture->value = $facture->montantTTC;
        $em->persist($ecriture);

        $ecriture = new Ecriture();
        $ecriture->compte = $facture->compte;
        $ecriture->operation = $operation;
        $ecriture->value = -$facture->montantHT;
        $em->persist($ecriture);

        if($facture->montantTTC!=$facture->montantHT){
            $ecriture = new Ecriture();
            $ecriture->compte = $em->getRepository('GestionBundle:Compte')->getCompteTVA();
            $ecriture->operation = $operation;
            $ecriture->value = -($facture->montantTTC-$facture->montantHT);
            $em->persist($ecriture);
            $em->flush();
        }

    }

    function dalete($facture){
        $em = $this->getEntityManager();

        $em->getRepository('GestionBundle:Operation')->deleteForFacture($facture);
        $em->remove($facture);
        $em->flush();
    }

    function getAll(){
        $query = $this->createQueryBuilder('p')
            ->orderBy('p.date', 'DESC')
            ->getQuery();

            return $query->getResult();
    }
}
